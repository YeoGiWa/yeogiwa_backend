# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Test and Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Personal Environment
        run: |
          case "${{ github.actor_id }}" in
            "${{ secrets.USER1_ID }}")
              DB_PORT=${{ secrets.DB_PORT_USER1 }}
              BASE_URL=${{ secrets.BASE_URL_USER1 }}
            ;;
            "${{ secrets.USER2_ID }}")
              DB_PORT=${{ secrets.DB_PORT_USER2 }}
              BASE_URL=${{ secrets.BASE_URL_USER2 }}
            ;;
            "${{ secrets.USER3_ID }}")
              DB_PORT=${{ secrets.DB_PORT_USER3 }}
              BASE_URL=${{ secrets.BASE_URL_USER3 }}
            ;;
            "${{ secrets.USER4_ID }}")
              DB_PORT=${{ secrets.DB_PORT_USER4 }}
              BASE_URL=${{ secrets.BASE_URL_USER4 }}
            ;;
          esac

      - name: Setup env for application.yml
        run: |
          DB_HOST=${{ secrets.DB_HOST }}
          DB_DB=${{ secrets.DB_DB }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          OPENAPI_FESTIVAL_KEY=${{ secrets.OPENAPI_FESTIVAL_KEY }}
          OPENAPI_BUSINESS_KEY=${{ secrets.OPENAPI_BUSINESS_KEY }}
          KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
          APPLE_CLIENT_ID=${{ secrets.APPLE_CLIENT_ID }}
          APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}
          APPLE_KEY_ID=${{ secrets.APPLE_KEY_ID }}
          DDL_AUTO=validate

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Test with Gradle
        run: ./gradlew test

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:pr${{ github.event.number }}-${{ github.run_number }}

  deploy:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: ${{ secrets.REMOTE_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Setup Personal Environment
            case "${{ github.actor_id }}" in
              "${{ secrets.USER1_ID }}")
                DIST_PORT=${{ secrets.DOCKER_PORT_USER1 }}
                DB_PORT=${{ secrets.DB_PORT_USER1 }}
              ;;
              "${{ secrets.USER2_ID }}")
                DIST_PORT=${{ secrets.DOCKER_PORT_USER2 }}
                DB_PORT=${{ secrets.DB_PORT_USER2 }}
              ;;
              "${{ secrets.USER3_ID }}")
                DIST_PORT=${{ secrets.DOCKER_PORT_USER3 }}
                DB_PORT=${{ secrets.DB_PORT_USER3 }}
              ;;
              "${{ secrets.USER4_ID }}")
                DIST_PORT=${{ secrets.DOCKER_PORT_USER4 }}
                DB_PORT=${{ secrets.DB_PORT_USER4 }}
              ;;
            esac
            ${{ secrets.PATH_TO_DOCKER }} pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:pr${{ github.event.number }}-${{ github.run_number }}
            ${{ secrets.PATH_TO_DOCKER }} stop ${{ secrets.DOCKER_CONTAINER_NAME }}${{ github.actor_id }}
            ${{ secrets.PATH_TO_DOCKER }} rm ${{ secrets.DOCKER_CONTAINER_NAME }}${{ github.actor_id }}
            ${{ secrets.PATH_TO_DOCKER }} run -p ${DIST_PORT}:8080 --name ${{ secrets.DOCKER_CONTAINER_NAME }}${{ github.actor_id }} -e DB_HOST=${{ secrets.DB_HOST }} -e DB_PORT=${DB_PORT} -e DB_DB=${{ secrets.DB_DB }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e JWT_SECRET=${{ secrets.JWT_SECRET }} -e OPENAPI_FESTIVAL_KEY=${{ secrets.OPENAPI_FESTIVAL_KEY }} -e OPENAPI_BUSINESS_KEY=${{ secrets.OPENAPI_BUSINESS_KEY }} -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} -e APPLE_CLIENT_ID=${{ secrets.APPLE_CLIENT_ID }} -e APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }} -e APPLE_KEY_ID=${{ secrets.APPLE_KEY_ID }} -e BASE_URL=${BASE_URL} -e DDL_AUTO=validate -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:pr${{ github.event.number }}-${{ github.run_number }}